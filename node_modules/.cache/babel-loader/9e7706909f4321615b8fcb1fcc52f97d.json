{"ast":null,"code":"import _slicedToArray from \"/Users/scott/code/eshop/react-admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/scott/code/eshop/react-admin/examples/demo/src/products/ImageFile.tsx\";\n\nimport React, { useState, useRef } from 'react'; // Import React FilePond\n\nimport { FilePond, registerPlugin } from 'react-filepond'; // Import FilePond styles\n\nimport 'filepond/dist/filepond.min.css'; // Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport { API_BASE, CONTEXT } from '../APIUrls';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileRename); // Our app\n\nvar ImageFile = function ImageFile(_ref) {\n  var onprocessend = _ref.onprocessend;\n\n  var _useState = useState(Date.now().toString() + \".jpg\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      filename = _useState2[0],\n      setFilename = _useState2[1];\n\n  var pond = useRef();\n\n  var _JSON$parse = JSON.parse(localStorage.getItem('auth')),\n      token = _JSON$parse.token;\n\n  var handleInit = function handleInit() {\n    _this.pond.addFile('1605603793591.jpg');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FilePond, {\n    ref: pond //files={this.state.files}\n    ,\n    allowMultiple: false,\n    allowReorder: true //files={[]}\n    ,\n    \"accepted-file-types\": \"image/jpeg, image/png\",\n    maxFiles: 1,\n    labelIdle: \"\\u4ECE\\u684C\\u9762\\u62D6\\u62C9\\u6587\\u4EF6\\u6216 <span class=\\\"filepond--label-action\\\">\\u6D4F\\u89C8\\u6587\\u4EF6</span>\",\n    server: {\n      url: \"\".concat(API_BASE).concat(CONTEXT, \"/upload\"),\n      headers: {\n        'x-nideshop-token': token,\n        'filename': filename.toString()\n      }\n    },\n    name: \"files\",\n    oninit: function oninit() {\n      return handleInit();\n    },\n    onaddfile: function onaddfile(error, file) {\n      setFilename(Date.now().toString() + \".jpg\");\n    },\n    onprocessfile: function onprocessfile(error, file) {\n      if (error) {\n        console.log('Oh no');\n        return;\n      }\n\n      onprocessend(filename);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default ImageFile;","map":{"version":3,"sources":["/Users/scott/code/eshop/react-admin/examples/demo/src/products/ImageFile.tsx"],"names":["React","useState","useRef","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","API_BASE","CONTEXT","FilePondPluginFileRename","ImageFile","onprocessend","Date","now","toString","filename","setFilename","pond","JSON","parse","localStorage","getItem","token","handleInit","addFile","url","headers","error","file","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA8BC,MAA9B,QAA4C,OAA5C,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,gBAAzC,C,CAEA;;AACA,OAAO,gCAAP,C,CAEA;AACA;;AACA,OAAOC,kCAAP,MAA+C,wCAA/C;AACA,OAAOC,0BAAP,MAAuC,+BAAvC;AACA,OAAO,sEAAP;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,YAAlC;AACA,OAAOC,wBAAP,MAAqC,6BAArC;AAGA;AACAL,cAAc,CAACC,kCAAD,EAAqCC,0BAArC,EAAgEG,wBAAhE,CAAd,C,CAGA;;AACA,IAAMC,SAA8B,GAAG,SAAjCA,SAAiC,OAAoB;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;;AAAA,kBACvBV,QAAQ,CAASW,IAAI,CAACC,GAAL,GAAWC,QAAX,KAAwB,MAAjC,CADe;AAAA;AAAA,MAChDC,QADgD;AAAA,MACtCC,WADsC;;AAEvD,MAAMC,IAAI,GAAGf,MAAM,EAAnB;;AAFuD,oBAGrCgB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAHqC;AAAA,MAG/CC,KAH+C,eAG/CA,KAH+C;;AAKvD,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,IAAA,KAAI,CAACN,IAAL,CAAUO,OAAV,CAAkB,mBAAlB;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,GAAG,EAAEP,IADT,CAEI;AAFJ;AAGI,IAAA,aAAa,EAAE,KAHnB;AAII,IAAA,YAAY,EAAE,IAJlB,CAKI;AALJ;AAMI,2BAAoB,uBANxB;AAOI,IAAA,QAAQ,EAAE,CAPd;AAQI,IAAA,SAAS,EAAC,yHARd;AASI,IAAA,MAAM,EAAE;AACJQ,MAAAA,GAAG,YAAKlB,QAAL,SAAgBC,OAAhB,YADC;AAEJkB,MAAAA,OAAO,EAAE;AACL,4BAAoBJ,KADf;AAEL,oBAAaP,QAAQ,CAACD,QAAT;AAFR;AAFL,KATZ;AAgBI,IAAA,IAAI,EAAC,OAhBT;AAiBI,IAAA,MAAM,EAAE;AAAA,aAAMS,UAAU,EAAhB;AAAA,KAjBZ;AAkBI,IAAA,SAAS,EAAE,mBAACI,KAAD,EAAyCC,IAAzC,EAA8D;AACrEZ,MAAAA,WAAW,CAACJ,IAAI,CAACC,GAAL,GAAWC,QAAX,KAAwB,MAAzB,CAAX;AACH,KApBL;AAqBI,IAAA,aAAa,EAAE,uBAACa,KAAD,EAAyCC,IAAzC,EAA8D;AACzE,UAAID,KAAJ,EAAW;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACH;;AACDnB,MAAAA,YAAY,CAACI,QAAD,CAAZ;AACH,KA3BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAiCH,CA1CD;;AA4CA,eAAeL,SAAf","sourcesContent":["import React, { useState, FC, useRef } from 'react';\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from 'react-filepond';\n\n// Import FilePond styles\nimport 'filepond/dist/filepond.min.css';\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport { FileUploadProps } from '../types';\nimport { API_BASE, CONTEXT } from '../APIUrls';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\nimport { FilePondErrorDescription, FilePondFile } from 'filepond';\n\n// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginFileRename);\n\n\n// Our app\nconst ImageFile: FC<FileUploadProps> = ({onprocessend}) => {\n    const [filename, setFilename] = useState<string>(Date.now().toString() + \".jpg\");\n    const pond = useRef<any>();\n    const { token } = JSON.parse(localStorage.getItem('auth')!);\n\n    const handleInit = () => {\n        this.pond.addFile('1605603793591.jpg');\n    };\n    \n    return (\n        <div className=\"App\">\n            <FilePond               \n                ref={pond}\n                //files={this.state.files}\n                allowMultiple={false}\n                allowReorder={true}\n                //files={[]}\n                accepted-file-types=\"image/jpeg, image/png\"\n                maxFiles={1}\n                labelIdle='从桌面拖拉文件或 <span class=\"filepond--label-action\">浏览文件</span>'\n                server={{\n                    url: `${API_BASE}${CONTEXT}/upload`,\n                    headers: {\n                        'x-nideshop-token': token,\n                        'filename' : filename.toString()\n                    }\n                }}\n                name=\"files\"\n                oninit={() => handleInit()}\n                onaddfile={(error: FilePondErrorDescription | null, file: FilePondFile)=>{\n                    setFilename(Date.now().toString() + \".jpg\");\n                }}\n                onprocessfile={(error: FilePondErrorDescription | null, file: FilePondFile)=>{\n                    if (error) {\n                        console.log('Oh no');\n                        return;\n                    }\n                    onprocessend(filename);\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ImageFile;\n"]},"metadata":{},"sourceType":"module"}